<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:NugetEfficientTool.Utils;assembly=NugetEfficientTool.Utils">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Colors/Shared.xaml"/>
        <ResourceDictionary Source="../Images/Image.All.xaml"/>
        <ResourceDictionary Source="Style.Button.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="Style.Button.WindowClose" BasedOn="{StaticResource Style.Button.Geometry.Background.SimpleSize}" TargetType="Button">
        <Setter Property="helper:ControlHelper.Geometry" Value="{StaticResource Geometry.Window.Close}" />
        <Setter Property="helper:ControlHelper.BackgroundHover" Value="#D94C4C" />
        <Setter Property="helper:ControlHelper.BackgroundPressed" Value="#B34747" />
        <Setter Property="helper:ControlHelper.ForegroundNormal" Value="{StaticResource Brush.Icon.Faint}" />
        <Setter Property="helper:ControlHelper.ForegroundHover" Value="#FFFFFF" />
        <Setter Property="helper:ControlHelper.ForegroundPressed" Value="#99FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <Border x:Name="CoverBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Path x:Name="IconPath" Fill="{Binding Path=(helper:ControlHelper.ForegroundNormal), RelativeSource={RelativeSource TemplatedParent}}" 
                  Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"
                  Data="{Binding Path=(helper:ControlHelper.Geometry),RelativeSource={RelativeSource TemplatedParent}}"
                  RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <RotateTransform x:Name="IconPathTransform" Angle="0"></RotateTransform>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CoverBorder" Property="Background" 
                        Value="{Binding Path=(helper:ControlHelper.BackgroundHover), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="IconPath" Property="Fill" 
                        Value="{Binding Path=(helper:ControlHelper.ForegroundHover), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CoverBorder" Property="Background" 
                        Value="{Binding Path=(helper:ControlHelper.BackgroundPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="IconPath" Property="Fill" 
                        Value="{Binding Path=(helper:ControlHelper.ForegroundPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="IconPath" Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                                <Storyboard TargetName="IconPathTransform" TargetProperty="Angle">
                                    <DoubleAnimation From="0" To="90" Duration="0:0:0.1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                                <Storyboard TargetName="IconPathTransform" TargetProperty="Angle">
                                    <DoubleAnimation From="90" To="0" Duration="0:0:0.1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Style.Button.Close" BasedOn="{StaticResource Style.Button.Geometry.Background.SimpleSize}" TargetType="Button">
        <Setter Property="helper:ControlHelper.Geometry" Value="{StaticResource Geometry.Window.Close}" />
        <Setter Property="helper:ControlHelper.BackgroundHover" Value="Transparent" />
        <Setter Property="helper:ControlHelper.BackgroundPressed" Value="Transparent" />
        <Setter Property="helper:ControlHelper.ForegroundNormal" Value="{StaticResource Brush.Icon.Brightest}" />
        <Setter Property="helper:ControlHelper.ForegroundHover" Value="{StaticResource Brush.Icon.Brighter}" />
        <Setter Property="helper:ControlHelper.ForegroundPressed" Value="{StaticResource Brush.Icon.Bright}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="Transparent">
                        <Border x:Name="CoverBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <Path x:Name="IconPath" Fill="{Binding Path=(helper:ControlHelper.ForegroundNormal), RelativeSource={RelativeSource TemplatedParent}}" 
                              Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Center"
                              Data="{Binding Path=(helper:ControlHelper.Geometry),RelativeSource={RelativeSource TemplatedParent}}">
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CoverBorder" Property="Background" 
                        Value="{Binding Path=(helper:ControlHelper.BackgroundHover), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="IconPath" Property="Fill" 
                        Value="{Binding Path=(helper:ControlHelper.ForegroundHover), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CoverBorder" Property="Background" 
                        Value="{Binding Path=(helper:ControlHelper.BackgroundPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="IconPath" Property="Fill" 
                        Value="{Binding Path=(helper:ControlHelper.ForegroundPressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>