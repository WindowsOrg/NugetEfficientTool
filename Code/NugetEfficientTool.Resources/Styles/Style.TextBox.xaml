<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:helper="clr-namespace:NugetEfficientTool.Utils;assembly=NugetEfficientTool.Utils">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Colors/Shared.xaml"/>
        <ResourceDictionary Source="../Images/Image.All.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <SolidColorBrush x:Key="TextBoxNormalBorderBrush" Color="#ABABB3" />
    <SolidColorBrush x:Key="TextBoxHighlightBorderBrush" Color="#569de5" />

    <!--这里的行高设置为ContextMenu本身字号的高度，因为如果不设置会继承文本的行高，导致菜单字体行高有问题-->
    <ContextMenu x:Key="TextBoxContextMenu" Style="{DynamicResource Style.ContextMenu.Default}" TextOptions.TextHintingMode="Fixed"
                           Block.LineHeight="12"
            TextOptions.TextFormattingMode="Display">
        <MenuItem Header="复制" Command="Copy" InputGestureText="Ctrl+C" Style="{DynamicResource Style.MenuItem.Default}" />
        <MenuItem Header="剪切" Command="Cut" InputGestureText="Ctrl+X" Style="{DynamicResource Style.MenuItem.Default}" />
        <MenuItem Header="粘贴" Command="Paste" InputGestureText="Ctrl+V" Style="{DynamicResource Style.MenuItem.Default}" />
    </ContextMenu>

    <Style x:Key="Style.DefaultTextBox" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3 2" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Dark}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="helper:ControlHelper.CornerRadius" Value="2"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Border x:Name="RootBorder" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(helper:ControlHelper.CornerRadius)}" 
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" />
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource Brush.Accent.Normal}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--支持多行、自动显示滚动条的文本框样式-->
    <Style x:Key="Style.MultiLineTextBox" TargetType="TextBox" BasedOn="{StaticResource Style.DefaultTextBox}">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="AcceptsTab" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
    </Style>

    <Style x:Key="Style.NoBorderTextBox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Style.TextBox.ImageAndText" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{StaticResource Brush.BorderBrush.Lightest}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Height="{TemplateBinding Height}" MinHeight="{TemplateBinding MinHeight}"
                                  Width="{TemplateBinding Width}" MinWidth="{TemplateBinding MinWidth}">
                        <Border x:Name="BackgroundBorder"
                                        Background="{TemplateBinding Background}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="4"></Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="ControlImage" 
                                   Source="{Binding Path=(helper:ControlHelper.Image), RelativeSource={RelativeSource TemplatedParent}}"
                                   Height="20" Width="20" VerticalAlignment="Center" Stretch="Uniform" Margin="12 0 6 0"/>
                            <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1"
                                                  Height="{TemplateBinding Height}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}">
                                <ScrollViewer.Resources>
                                    <VisualBrush x:Key="Prompt" TileMode="None" Stretch="None"
                                                         AlignmentX="Left" AutoLayoutContent="True">
                                        <VisualBrush.Visual>
                                            <Grid Background="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}},Path=Background}">
                                                <TextBlock FontSize="14" FontWeight="Normal" TextAlignment="Left" Margin="4 0 0 0" VerticalAlignment="Center"
                                                           Foreground="{StaticResource Brush.Text.Faint}" 
                                                           Text="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type TextBox}},Path=(helper:ControlHelper.WatermarkText)}" />
                                            </Grid>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </ScrollViewer.Resources>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ControlImage" Property="Source" Value="{x:Null}">
                            <Setter TargetName="ControlImage" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource Brush.Accent.Light}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{DynamicResource Prompt}" TargetName="PART_ContentHost" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Background" Value="{DynamicResource Prompt}" TargetName="PART_ContentHost" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>